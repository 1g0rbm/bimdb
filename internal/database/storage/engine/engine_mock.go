// Code generated by MockGen. DO NOT EDIT.
// Source: engine.go

// Package engine is a generated GoMock package.
package engine

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIEngine is a mock of IEngine interface.
type MockIEngine struct {
	ctrl     *gomock.Controller
	recorder *MockIEngineMockRecorder
}

// MockIEngineMockRecorder is the mock recorder for MockIEngine.
type MockIEngineMockRecorder struct {
	mock *MockIEngine
}

// NewMockIEngine creates a new mock instance.
func NewMockIEngine(ctrl *gomock.Controller) *MockIEngine {
	mock := &MockIEngine{ctrl: ctrl}
	mock.recorder = &MockIEngineMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEngine) EXPECT() *MockIEngineMockRecorder {
	return m.recorder
}

// Del mocks base method.
func (m *MockIEngine) Del(key string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Del", key)
}

// Del indicates an expected call of Del.
func (mr *MockIEngineMockRecorder) Del(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Del", reflect.TypeOf((*MockIEngine)(nil).Del), key)
}

// Get mocks base method.
func (m *MockIEngine) Get(key string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIEngineMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIEngine)(nil).Get), key)
}

// Set mocks base method.
func (m *MockIEngine) Set(key, value string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", key, value)
}

// Set indicates an expected call of Set.
func (mr *MockIEngineMockRecorder) Set(key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockIEngine)(nil).Set), key, value)
}
